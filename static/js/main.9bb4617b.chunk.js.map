{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","state","data","select_list","_handleSelect","event","handleSelect","target","value","renderNewOption","option","options_array","db","firestore","collection","get","then","querySnapshot","forEach","doc","options","Object","entries","sort","map","push","catch","error","console","log","size","length","document","snapshot","values","1","2","set","new_collection","this","getDocument","selected","getCollection","toLowerCase","addCollection","new_list","setState","getInitialCollection","style","display","margin","width","height","window","innerHeight","backgroundColor","ListGroup","Item","border","className","onChange","disabled","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9bb4617b.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCcCFP-7ADp4Qfs3Hls8fo9-oE94ccPljY\",\r\n  authDomain: \"sapinnovationassignment.firebaseapp.com\",\r\n  databaseURL: \"https://sapinnovationassignment-default-rtdb.firebaseio.com\",\r\n  projectId: \"sapinnovationassignment\",\r\n  storageBucket: \"sapinnovationassignment.appspot.com\",\r\n  messagingSenderId: \"576674288045\",\r\n  appId: \"1:576674288045:web:716396b6d97b833dacd124\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport firebase from \"./firebase\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n<link\r\n  rel=\"stylesheet\"\r\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n  integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n  crossorigin=\"anonymous\"\r\n></link>;\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: [],\r\n    select_list: [],\r\n  };\r\n\r\n  // ======================================= Get first Categories =======================================\r\n  async getInitialCollection() {\r\n    var options_array = [];\r\n    const db = firebase.firestore();\r\n    var options, initial_options;\r\n    initial_options = await db\r\n      .collection(\"categories\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          options = doc.data();\r\n        });\r\n      })\r\n      .then(() => {\r\n        return Object.entries(options)\r\n          .sort()\r\n          .map(([key, value]) => {\r\n            options_array.push(value);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    return options_array;\r\n  }\r\n\r\n\r\n  // ======================================= Search for a category and fetch it =======================================\r\n  async getCollection(collection) {\r\n    const db = firebase.firestore();\r\n    var options_array = [];\r\n    var options = [];\r\n    var get_options = await db\r\n      .collection(collection)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        if (querySnapshot.size == 0) {\r\n          return -1;\r\n        } else {\r\n          querySnapshot.forEach(function (doc) {\r\n            options = doc.data();\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (options != []) {\r\n          return Object.entries(options)\r\n            .sort()\r\n            .map(([key, value]) => {\r\n              options_array.push(value);\r\n            });\r\n        } else return -1;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    if (get_options.length == 0) {\r\n      return -1\r\n    }\r\n    else {\r\n      return options_array;\r\n    }\r\n  }\r\n\r\n\r\n  // ======================================= Search for a category and fetch it =======================================\r\n  async getDocument(document) {\r\n    var options_array = [];\r\n    const db = firebase.firestore();\r\n    const collectionRef = await db.collection(\"new_categories\").doc(document).get().then((snapshot) => {\r\n      Object.values(snapshot.data())\r\n        .sort()\r\n        .map((value) => {\r\n          options_array.push(value);\r\n        });\r\n    }).catch(function (error) {\r\n      console.log(\"Error getting document:\", error);\r\n      return -1;\r\n    });\r\n\r\n    return options_array\r\n  }\r\n\r\n\r\n  // ======================================= Add a new category =======================================\r\n  async addCollection(collection) {\r\n    const db = firebase.firestore();\r\n    const data = {\r\n      1: collection + \"-1\",\r\n      2: collection + \"-2\",\r\n    };\r\n    var new_collection = await db\r\n      .collection(\"new_categories\")\r\n      .doc(collection)\r\n      .set(data);\r\n    new_collection = await this.getDocument(collection);\r\n    return new_collection;\r\n  }\r\n\r\n\r\n  // ======================================= Handling after selecting an option =======================================\r\n  _handleSelect = (event) => {\r\n    this.handleSelect(event.target.value);\r\n  };\r\n  async handleSelect(value) {\r\n    var selected = value;\r\n    var options = await this.getCollection(selected.toLowerCase());\r\n    if (options == -1) {\r\n      options = await this.getDocument(selected.toLowerCase());\r\n      if (options.length == 0) {\r\n        options = await this.addCollection(selected.toLowerCase());\r\n      }\r\n    }\r\n    var new_list = this.state.select_list;\r\n    new_list.push({ options: options });\r\n    this.setState({ select_list: new_list });\r\n  }\r\n\r\n  renderNewOption = function (option) {\r\n    return <option>{option}</option>;\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ data: await this.getInitialCollection() })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"auto\",\r\n            width: \"60%\",\r\n            height: window.innerHeight,\r\n            backgroundColor: \"#7bdcb5\",\r\n          }}\r\n        >\r\n\r\n          <ListGroup\r\n            style={{\r\n              display: \"flex\",\r\n              margin: \"auto\",\r\n              width: \"100%\"\r\n            }}\r\n          >\r\n            <ListGroup.Item style={{ backgroundColor: \"inherit\", border: \"0px\" }}><select\r\n              className=\"form-control\"\r\n              onChange={this._handleSelect}\r\n            >\r\n              <option disabled selected>Select...</option>\r\n              {this.state.data.map(this.renderNewOption)}\r\n            </select>\r\n            </ListGroup.Item>\r\n            {this.state.select_list.map((index) => {\r\n              return (\r\n                <ListGroup.Item style={{ backgroundColor: \"#7bdcb5\", border: \"0px\" }}>\r\n                  <select\r\n\r\n                    className=\"form-control\"\r\n                    onChange={this._handleSelect}\r\n                  >\r\n                    <option disabled selected>Select...</option>\r\n                    <option>{index.options[0]}</option>\r\n                    <option>{index.options[1]}</option>\r\n                  </select>\r\n                </ListGroup.Item>)\r\n            })}\r\n          </ListGroup>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}